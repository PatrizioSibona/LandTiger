<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\Blinky.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\Blinky.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Thu Jan 18 20:04:00 2018
<BR><P>
<H3>Maximum Stack Usage =        320 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EINT3_IRQHandler &rArr; Read_Ads7846 &rArr; Map_Pixel &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[20]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">EINT0_IRQHandler</a> from irq.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">EINT1_IRQHandler</a> from irq.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">EINT2_IRQHandler</a> from irq.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT3_IRQHandler</a> from irq.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">TIMER0_IRQHandler</a> from irq_timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">TIMER1_IRQHandler</a> from irq_timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from irq_serial.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[2f]">_sputc</a> from printf1.o(i._sputc) referenced from printf1.o(i.__0sprintf$1)
 <LI><a href="#[2d]">main</a> from blinky.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[7e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[30]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[80]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[81]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[82]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[83]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4f]"></a>wait</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, glcd_lpc1700.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SystemInit</STRONG> (Thumb, 310 bytes, Stack size 12 bytes, system_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>main</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, blinky.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; GLCD_DisplayTTTLattice &rArr; GLCD_DisplayLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wait_delay
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetTextColor
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetBackColor
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayVerticalString
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayTTTLattice
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Clear
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6e]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[41]"></a>delay</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Ads7846
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Init
</UL>

<P><STRONG><a name="[40]"></a>wait_delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, glcd_lpc1700.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
</UL>

<P><STRONG><a name="[33]"></a>GLCD_Init</STRONG> (Thumb, 2028 bytes, Stack size 40 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GLCD_Init &rArr; rd_reg &rArr; wr_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_reg
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>GLCD_WindowMax</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayVerticalString
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Clear
</UL>

<P><STRONG><a name="[45]"></a>GLCD_PutPixel</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_WindowMax
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayAntidiagonalLine
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayDiagonalLine
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayLine
</UL>

<P><STRONG><a name="[36]"></a>GLCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_DisplayMove
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>GLCD_SetBackColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>GLCD_Clear</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GLCD_Clear &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_WindowMax
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>GLCD_DrawChar</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GLCD_DrawChar &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayChar
</UL>

<P><STRONG><a name="[4a]"></a>GLCD_DisplayChar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GLCD_DisplayChar &rArr; GLCD_DrawChar &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_DisplayMove
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayVerticalString
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
</UL>

<P><STRONG><a name="[3a]"></a>GLCD_DisplayVerticalString</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GLCD_DisplayVerticalString &rArr; GLCD_DisplayChar &rArr; GLCD_DrawChar &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayChar
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>GLCD_DisplayString</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GLCD_DisplayString &rArr; GLCD_DisplayChar &rArr; GLCD_DrawChar &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayChar
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>GLCD_DisplayLine</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GLCD_DisplayLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayTTTLattice
</UL>

<P><STRONG><a name="[4c]"></a>GLCD_DisplayDiagonalLine</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GLCD_DisplayDiagonalLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
</UL>

<P><STRONG><a name="[4d]"></a>GLCD_DisplayAntidiagonalLine</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GLCD_DisplayAntidiagonalLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
</UL>

<P><STRONG><a name="[38]"></a>_wait_delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, glcd_ttt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>computePos</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, glcd_ttt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = computePos
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Into_Lattice
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_init
</UL>

<P><STRONG><a name="[50]"></a>TTT_init</STRONG> (Thumb, 220 bytes, Stack size 28 bytes, glcd_ttt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TTT_init &rArr; computePos
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computePos
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayTTTLattice
</UL>

<P><STRONG><a name="[39]"></a>GLCD_DisplayTTTLattice</STRONG> (Thumb, 218 bytes, Stack size 72 bytes, glcd_ttt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GLCD_DisplayTTTLattice &rArr; GLCD_DisplayLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>TTT_CheckVictory</STRONG> (Thumb, 684 bytes, Stack size 48 bytes, glcd_ttt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TTT_CheckVictory &rArr; GLCD_DisplayLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computePos
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayAntidiagonalLine
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayDiagonalLine
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayLine
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wait_delay
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetTextColor
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_DisplayMove
</UL>

<P><STRONG><a name="[54]"></a>TTT_DisplayMove</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, glcd_ttt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TTT_DisplayMove &rArr; TTT_CheckVictory &rArr; GLCD_DisplayLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayChar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetTextColor
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_YourMove
</UL>

<P><STRONG><a name="[55]"></a>Map_Into_Lattice</STRONG> (Thumb, 382 bytes, Stack size 136 bytes, glcd_ttt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Map_Into_Lattice &rArr; computePos
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computePos
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_YourMove
</UL>

<P><STRONG><a name="[56]"></a>TTT_YourMove</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, glcd_ttt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TTT_YourMove &rArr; TTT_DisplayMove &rArr; TTT_CheckVictory &rArr; GLCD_DisplayLine &rArr; GLCD_PutPixel &rArr; GLCD_WindowMax &rArr; wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Into_Lattice
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_DisplayMove
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>LPC17xx_SPI_SetSpeed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touchpanel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS7843_SPI_Init
</UL>

<P><STRONG><a name="[3f]"></a>TP_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TP_Init &rArr; ADS7843_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS7843_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>Read_X</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Read_X &rArr; RD_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUS
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WR_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_GetAdXY
</UL>

<P><STRONG><a name="[5c]"></a>Read_Y</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Read_Y &rArr; RD_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUS
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WR_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_GetAdXY
</UL>

<P><STRONG><a name="[5d]"></a>TP_GetAdXY</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TP_GetAdXY &rArr; Read_Y &rArr; RD_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Ads7846
</UL>

<P><STRONG><a name="[5e]"></a>Map_Pixel</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Map_Pixel &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Ads7846
</UL>

<P><STRONG><a name="[64]"></a>Read_Ads7846</STRONG> (Thumb, 210 bytes, Stack size 208 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Read_Ads7846 &rArr; Map_Pixel &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Pixel
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_GetAdXY
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>BUTTON_init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lib_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BUTTON_init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>LED_On</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, funct_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Out
</UL>

<P><STRONG><a name="[6a]"></a>LED_Off</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, funct_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Out
</UL>

<P><STRONG><a name="[68]"></a>LED_Out</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, funct_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[3b]"></a>LED_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lib_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>LED_deinit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lib_led.o(.text), UNUSED)

<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, irq_serial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART0_IRQHandler &rArr; LED_Out
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SER_init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, lib_serial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[6f]"></a>SER_putFirstChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lib_serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, irq_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, irq_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>enable_timer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lib_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>disable_timer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lib_timer.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>reset_timer</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lib_timer.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>init_timer</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lib_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_putFirstChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EINT1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_putFirstChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EINT2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_putFirstChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT3_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = EINT3_IRQHandler &rArr; Read_Ads7846 &rArr; Map_Pixel &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_putFirstChar
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Ads7846
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_YourMove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Ads7846
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Pixel
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Pixel
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Pixel
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Pixel
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_Pixel
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[76]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[90]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__0sprintf$1</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[91]"></a>__1sprintf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)

<P><STRONG><a name="[70]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[93]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4e]"></a>lcd_send</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>

<P><STRONG><a name="[46]"></a>wr_cmd</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wr_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_reg
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Clear
</UL>

<P><STRONG><a name="[47]"></a>wr_dat</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>

<P><STRONG><a name="[48]"></a>wr_dat_only</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wr_dat_only
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Clear
</UL>

<P><STRONG><a name="[43]"></a>wr_reg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wr_reg &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_WindowMax
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Clear
</UL>

<P><STRONG><a name="[42]"></a>rd_reg</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, glcd_lpc1700.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rd_reg &rArr; wr_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Init
</UL>

<P><STRONG><a name="[53]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, glcd_ttt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTT_CheckVictory
</UL>

<P><STRONG><a name="[5a]"></a>WR_CMD</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touchpanel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
</UL>

<P><STRONG><a name="[57]"></a>ADS7843_SPI_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADS7843_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC17xx_SPI_SetSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
</UL>

<P><STRONG><a name="[59]"></a>DelayUS</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, touchpanel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_GetAdXY
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
</UL>

<P><STRONG><a name="[5b]"></a>RD_AD</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RD_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUS
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WR_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
</UL>

<P><STRONG><a name="[67]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lib_button.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_init
</UL>

<P><STRONG><a name="[6c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lib_serial.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_init
</UL>

<P><STRONG><a name="[6d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lib_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
</UL>

<P><STRONG><a name="[7c]"></a>_printf_core</STRONG> (Thumb, 334 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>

<P><STRONG><a name="[2f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf1.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0sprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
